name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: cs-ts
            asset_name: cs-ts-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: cs-ts
            asset_name: cs-ts-linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: cs-ts
            asset_name: cs-ts-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: cs-ts
            asset_name: cs-ts-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            artifact_name: cs-ts.exe
            asset_name: cs-ts-windows-x86_64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation tools (Linux)
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      - name: Create zip archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release/
          Compress-Archive -Path ${{ matrix.artifact_name }} -DestinationPath cs-ts-${{ matrix.target }}.zip
          
      - name: Create zip archive (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release/
          zip -r cs-ts-${{ matrix.target }}.zip ${{ matrix.artifact_name }}
          
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.target }}/release/cs-ts-${{ matrix.target }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}